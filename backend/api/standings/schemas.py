""" parses output of query into dict for FE """
from marshmallow import Schema, fields

class StandingSchema(Schema):
    conferenceRank = fields.Integer(attribute="conference_rank")
    conferenceL10Rank = fields.Integer(attribute="conference_l10_rank")
    conferenceHomeRank = fields.Integer(attribute="conference_home_rank")
    conferenceRoadRank = fields.Integer(attribute="conference_road_rank")
    divisionHomeRank = fields.Integer(attribute="division_home_rank")
    divisionL10Rank = fields.Integer(attribute="division_l_10_rank")
    divisionRank = fields.Integer(attribute="division_rank")
    divisionRoadRank = fields.Integer(attribute="division_road_rank")
    gamesPlayed = fields.Integer(attribute="games_played")
    goalsAgainst = fields.Integer(attribute="goals_against")
    goalsFor = fields.Integer(attribute="goals_for")
    lastUpdated = fields.DateTime(attribute="last_updated")
    leagueId = fields.Integer(attribute="league_id")
    leagueRank = fields.Integer(attribute="league_rank")
    leagueL10Rank = fields.Integer(attribute="leaguel_10_rank")
    leagueHomeRank = fields.Integer(attribute="league_home_rank")
    leagueRoadRank = fields.Integer(attribute="league_road_rank")
    points = fields.Integer()
    pointsPercentage = fields.Float(attribute="points_percentage")
    ppConferenceRank = fields.Integer(attribute="pp_conference_rank")
    ppDivisionRank = fields.Integer(attribute="pp_division_rank")
    ppLeagueRank = fields.Integer(attribute="pp_league_rank")
    regulationWins = fields.Integer(attribute="regualtion_wins")
    row = fields.Integer()
    streak = fields.Str()
    teamId = fields.Integer(attribute="team_id")
    wildCardRank = fields.Integer(attribute="wild_card_rank")
